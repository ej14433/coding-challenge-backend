import bodyParser from 'body-parser';

export default function (app) {
  app.set('port', process.env.PORT || 3000);
  app.use(bodyParser.json());
  app.use(bodyParser.urlencoded({ extended: true }));
}

// sample middleware
export const checkJWT = (req, res, next) => {
  // example function
  if (checkJWTValidity(req.header)) return next();
  return res.status(403).json({ status: 'error', message: 'missing jwt in header' });
};

// stub function
function checkJWTValidity(jwt) {
  return true;
}


/**
 * TBD: middleware that checks the request body and querystring against the
 * existing swagger spec in order to ensure that:
 * all required parameters are present
 * all parameters are of the correct type
 * non-existing parameters are blocked
 *
 * @throws throw a 400 code error with a relevant error message
 *
 * @param {object} req request object generated by express
 * @param {object} res response object generated by express
 * @param {function} next middleware function
 */
export const checkAgainstSwagger = (req, res, next) => {
  return next();
  // TBD
};
